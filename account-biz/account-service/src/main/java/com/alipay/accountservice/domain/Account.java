package com.alipay.accountservice.domain;

import java.math.BigDecimal;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.NoArgsConstructor;

@Builder
@AllArgsConstructor
@NoArgsConstructor
public class Account {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column account.ID
     *
     * @mbg.generated
     */
    private Integer id;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column account.ACCOUNT_CODE
     *
     * @mbg.generated
     */
    private String accountCode;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column account.ACCOUNT_NAME
     *
     * @mbg.generated
     */
    private String accountName;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column account.AMOUNT
     *
     * @mbg.generated
     */
    private BigDecimal amount;

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column account.ID
     *
     * @return the value of account.ID
     * @mbg.generated
     */
    public Integer getId() {
        return id;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column account.ID
     *
     * @param id the value for account.ID
     * @mbg.generated
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column account.ACCOUNT_CODE
     *
     * @return the value of account.ACCOUNT_CODE
     * @mbg.generated
     */
    public String getAccountCode() {
        return accountCode;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column account.ACCOUNT_CODE
     *
     * @param accountCode the value for account.ACCOUNT_CODE
     * @mbg.generated
     */
    public void setAccountCode(String accountCode) {
        this.accountCode = accountCode == null ? null : accountCode.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column account.ACCOUNT_NAME
     *
     * @return the value of account.ACCOUNT_NAME
     * @mbg.generated
     */
    public String getAccountName() {
        return accountName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column account.ACCOUNT_NAME
     *
     * @param accountName the value for account.ACCOUNT_NAME
     * @mbg.generated
     */
    public void setAccountName(String accountName) {
        this.accountName = accountName == null ? null : accountName.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column account.AMOUNT
     *
     * @return the value of account.AMOUNT
     * @mbg.generated
     */
    public BigDecimal getAmount() {
        return amount;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column account.AMOUNT
     *
     * @param amount the value for account.AMOUNT
     * @mbg.generated
     */
    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table account
     *
     * @mbg.generated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", accountCode=").append(accountCode);
        sb.append(", accountName=").append(accountName);
        sb.append(", amount=").append(amount);
        sb.append("]");
        return sb.toString();
    }
}